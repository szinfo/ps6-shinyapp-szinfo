group_by(iso2) %>%
distinct(name) %>%
summarize(count = n()) %>%
arrange(rank(desc(count))) %>%
reframe(iso2, name, count)
gapminder %>%
group_by(name, iso2) %>%
distinct(name) %>%
summarize(count = n()) %>%
arrange(rank(desc(count)))
gapminder %>%
select(name, iso2) %>%
distinct(name) %>%
summarize(count = n()) %>%
arrange(rank(desc(count)))
gapminder %>%
group_by(iso2) %>%
distinct(name) %>%
summarize(count = n()) %>%
arrange(rank(desc(count)))
gapminder %>%
group_by(name) %>%
distinct(iso2) %>%
summarize(count = n()) %>%
arrange(rank(desc(count)))
gapminder %>%
group_by(iso2) %>%
distinct(name) %>%
summarize(count = n()) %>%
arrange(rank(desc(count)))
gapminder %>%
filter(is.na(name)) %>%
group_by(name) %>%
summarize(count = n_distinct(iso3)) %>%
arrange(desc(count))
gapminder %>%
group_by(name) %>%
distinct(name) %>%
summarize(count = n_distinct(iso3)) %>%
arrange(desc(count))
gapminder %>%
group_by(name) %>%
summarize(count = n_distinct(iso3)) %>%
arrange(desc(count))
gapminder %>%
filter(is.na(name)) %>%
group_by(name) %>%
distinct(iso3)
gapminder %>%
filter(is.na(name)) %>%
group_by(name) %>%
distinct(iso2)
gapminder %>%
filter(is.na(iso2)) %>%
group_by(name) %>%
distinct(iso2)
gapminder %>%
filter(is.na(iso2)) %>%
group_by(name) %>%
distinct(iso2)
gapminder %>%
filter(is.na(name)) %>%
group_by(name) %>%
distinct(iso3)
gapminder %>%
filter(!is.na(lifeExpectancy), !is.na(name)) %>%
filter(time == "1960" | time == "2019") %>%
group_by(name, time) %>%
mutate(rank = rank(desc(lifeExpectancy))) %>%
summarize(rank_ratio = rank/(n_distinct(name))) %>%
filter(name == "United States of America")
gapminder %>%
filter(time == "1960" | time == "2019") %>%
group_by(name, time) %>%
arrange(time) %>%
mutate(countries_by_year = n_distinct(name))
gapminder %>%
filter(time == "1960" | time == "2019") %>%
group_by(name, time) %>%
mutate(countries_by_year = n_distinct(name))
gapminder %>%
filter(time == "1960" | time == "2019") %>%
group_by(name, time) %>%
mutate(countries_by_year = count(name))
gapminder %>%
filter(time == "1960" | time == "2019") %>%
group_by(name, time) %>%
mutate(countries_by_year = sum(name))
gapminder %>%
filter(time == "1960" | time == "2019") %>%
group_by(name, time) %>%
mutate(countries_by_year = sum(n_distinct(name))
gapminder %>%
gapminder %>%
filter(time == "1960" | time == "2019") %>%
group_by(name, time) %>%
mutate(countries_by_year = sum(n_distinct(name))
gapminder %>%
gapminder %>%
filter(time == "1960" | time == "2019") %>%
group_by(time) %>%
mutate(countries_by_year = n_distinct(name))
gapminder %>%
filter(time == "1960") %>%
n_distinct(name)
gapminder %>%
filter(time == "1960") %>%
distinct(name)
gapminder %>%
filter(time == "2019") %>%
distinct(name)
gapminder %>%
filter(!is.na(lifeExpectancy), !is.na(name)) %>%
filter(time == "1960" | time == "2019") %>%
group_by(time) %>%
mutate(rank = rank(desc(lifeExpectancy))) %>%
mutate(countries_by_year = n_distinct(name)) %>%
summarize(rank_ratio = rank/countries_by_year) %>%
filter(name == "United States of America")
gapminder %>%
filter(!is.na(lifeExpectancy), !is.na(name)) %>%
filter(time == "1960" | time == "2019") %>%
group_by(time) %>%
mutate(rank = rank(desc(lifeExpectancy))) %>%
mutate(countries_by_year = n_distinct(name))
gapminder %>%
filter(!is.na(lifeExpectancy), !is.na(name)) %>%
filter(time == "1960" | time == "2019") %>%
group_by(time) %>%
mutate(rank = rank(desc(lifeExpectancy))) %>%
mutate(countries_by_year = n_distinct(name)) %>%
summarize(rank_ratio = rank/countries_by_year)
gapminder %>%
filter(!is.na(lifeExpectancy), !is.na(name)) %>%
filter(time == "1960" | time == "2019") %>%
group_by(time) %>%
mutate(rank = rank(desc(lifeExpectancy))) %>%
mutate(countries_by_year = n_distinct(name)) %>%
summarize(rank_ratio = rank/countries_by_year) %>%
reframe(name, year, rank_ratio)
gapminder %>%
filter(!is.na(lifeExpectancy), !is.na(name)) %>%
filter(time == "1960" | time == "2019") %>%
group_by(time) %>%
mutate(rank = rank(desc(lifeExpectancy))) %>%
mutate(countries_by_year = n_distinct(name)) %>%
mutate(rank_ratio = rank/countries_by_year) %>%
reframe(name, year, rank_ratio)
gapminder %>%
filter(!is.na(lifeExpectancy), !is.na(name)) %>%
filter(time == "1960" | time == "2019") %>%
group_by(time) %>%
mutate(rank = rank(desc(lifeExpectancy))) %>%
mutate(countries_by_year = n_distinct(name)) %>%
mutate(rank_ratio = rank/countries_by_year) %>%
reframe(name, time, rank_ratio)
gapminder %>%
filter(!is.na(lifeExpectancy), !is.na(name)) %>%
filter(time == "1960" | time == "2019") %>%
group_by(time) %>%
mutate(rank = rank(desc(lifeExpectancy))) %>%
mutate(countries_by_year = n_distinct(name)) %>%
mutate(rank_ratio = rank/countries_by_year) %>%
reframe(name, time, rank_ratio) %>%
filter(name == "United States of America")
gapminder %>%
filter(time == "1960" | time == "2019") %>%
group_by(time) %>%
mutate(countries_by_year = n_distinct(name))
gapminder %>%
group_by(time) %>%
summarize(na_co2 = sum(is.na(co2)),
na_co2_PC = sum(is.na(co2_PC))) %>%
arrange(desc(na_co2), na_co2_PC)
US <- gapminder %>% filter(name == "United States of America")
China <- gapminder %>% filter(name == "China")
India <- gapminder %>% filter(name == "India")
Australia <- gapminder %>%  filter(name == "Australia")
Kenya <- gapminder %>%  filter(name == "Kenya")
ggplot(data = gapminder) +
geom_line(data = US, aes(x = time, y = co2, color = "USA")) +
geom_line(data = China, aes(x = time, y = co2, color = "China")) +
geom_line(data = India, aes(x = time, y = co2, color = "India")) +
geom_line(data = Australia, aes(x = time, y = co2, color = "Australia")) +
geom_line(data = Kenya, aes(x = time, y = co2, color = "Kenya"))
gapminder %>%
filter(!is.na(region), !is.na(lifeExpectancy)) %>%
filter(time == "1960" | time == "2019") %>%
group_by(region, time) %>%
summarize(ave_lifeExpectancy = mean(lifeExpectancy))
gapminder %>%
filter(!is.na(region), !is.na(lifeExpectancy)) %>%
filter(time == "1960" | time == "2019") %>%
group_by(region, time) %>%
summarize(ave_lifeExpectancy = mean(lifeExpectancy)) %>%
mutate(growth_in_lE = ave_lifeExpectancy-lag(ave_lifeExpectancy)) %>%
arrange(-growth_in_lE)
gapminder %>%
filter(!is.na(region), !is.na(lifeExpectancy)) %>%
filter(time == "1960" | time == "2019") %>%
group_by(region, time) %>%
summarize(ave_lifeExpectancy = mean(lifeExpectancy)) %>%
mutate(growth_in_lE = ave_lifeExpectancy-lag(ave_lifeExpectancy)) %>%
reframe(region, growth_in_lE) %>%
rank(desc(growth_in_lE))
gapminder %>%
filter(!is.na(region), !is.na(lifeExpectancy)) %>%
filter(time == "1960" | time == "2019") %>%
group_by(region, time) %>%
summarize(ave_lifeExpectancy = mean(lifeExpectancy)) %>%
mutate(growth_in_lE = ave_lifeExpectancy-lag(ave_lifeExpectancy)) %>%
summarize(region, growth_in_lE) %>%
rank(desc(growth_in_lE))
gapminder %>%
filter(!is.na(region), !is.na(lifeExpectancy)) %>%
filter(time == "1960" | time == "2019") %>%
group_by(region, time) %>%
summarize(ave_lifeExpectancy = mean(lifeExpectancy)) %>%
mutate(growth_in_lE = ave_lifeExpectancy-lag(ave_lifeExpectancy)) %>%
arrange(-growth_in_lE)
overdose_data <- read.csv("Overdose_data_1999-2021 1.19.23.xlsx - Rate OD by Demographic.csv")
getwd()
setwd("/Users/sam/Desktop/Info201/problem_sets/ps6-shinyapp-szinfo")
overdose_data <- read.csv("Overdose_data_1999-2021 1.19.23.xlsx - Rate OD by Demographic.csv")
View(overdose_data)
overdose_data %>%
group_by(White (Non-Hispanic), 1999.0)
library(shiny)
library(rsconnect)
library(shiny)
library(shiny)
overdose_data <- read.csv("Overdose_data_1999-2021 1.19.23.xlsx - Rate OD by Demographic.csv")
ui <- mainPanel(
tabsetPanel(
tabPanel("About", textOutput("Drug_Overdoses")),
tabPanel("Plots", plotOutput("plot")),
tabPanel("Tables", tableOutput("table"))
)
)
server <- function(input, output) {
output$Drug_Overdoses <- renderText("Here is an an overview of Drug Overdose rates by Race, Gender and Year")
}
shinyApp(ui = ui, server = server)
library(shiny)
overdose_data <- read.csv("Overdose_data_1999-2021 1.19.23.xlsx - Rate OD by Demographic.csv")
ui <- fluidPage(
tabPanel("About",
titlepanel("About Drug Overdoses"),
textOutput("Drug_Overdoses")
),
tabPanel("Plots",
sidebarLayout(
sidebarPanel(
p("Here you can anaylze the type of drug causing the overdose, as well as the breakdown by race
showing you the impact by sex")
)
)
),
tabpanel("Tables",
sidebarLayout(
sidebarPanel(
p("This panel gives a breakdown of overdose by demographics(race and sex), as it breaks down
overdose by drug")
)
))
)
library(shiny)
overdose_data <- read.csv("Overdose_data_1999-2021 1.19.23.xlsx - Rate OD by Demographic.csv")
ui <- fluidPage(
tabPanel("About",
titlePanel("About Drug Overdoses"),
textOutput("Drug_Overdoses")
),
tabPanel("Plots",
sidebarLayout(
sidebarPanel(
p("Here you can anaylze the type of drug causing the overdose, as well as the breakdown by race
showing you the impact by sex")
)
)
),
tabpanel("Tables",
sidebarLayout(
sidebarPanel(
p("This panel gives a breakdown of overdose by demographics(race and sex), as it breaks down
overdose by drug")
)
))
)
ui <- fluidPage(
tabPanel("About",
titlePanel("About Drug Overdoses"),
textOutput("Drug_Overdoses")
),
tabPanel("Plots",
mainPanel("plot")
sidebarLayout(
library(shiny)
overdose_data <- read.csv("Overdose_data_1999-2021 1.19.23.xlsx - Rate OD by Demographic.csv")
ui <- fluidPage(
tabPanel("About",
titlePanel("About Drug Overdoses"),
textOutput("Drug_Overdoses")
),
tabPanel("Plots",
mainPanel("plot"),
sidebarLayout(
sidebarPanel(
p("Here you can anaylze the type of drug causing the overdose, as well as the breakdown by race
showing you the impact by sex")
)
)
),
tabpanel("Tables",
mainPanel("table"),
sidebarLayout(
sidebarPanel(
p("This panel gives a breakdown of overdose by demographics(race and sex), as it breaks down
overdose by drug")
)
))
)
library(shiny)
overdose_data <- read.csv("Overdose_data_1999-2021 1.19.23.xlsx - Rate OD by Demographic.csv")
ui <- fluidPage(
tabPanel("About",
titlePanel("About Drug Overdoses"),
textOutput("Drug_Overdoses")
),
tabPanel("Plots",
sidebarLayout(
sidebarPanel(
p("Here you can anaylze the type of drug causing the overdose, as well as the breakdown by raceshowing you the impact by sex")
)
)
),
tabpanel("Tables",
mainPanel("table"),
sidebarLayout(
sidebarPanel(
p("This panel gives a breakdown of overdose by demographics(race and sex), as it breaks down
overdose by drug")
)
))
)
library(shiny)
overdose_data <- read.csv("Overdose_data_1999-2021 1.19.23.xlsx - Rate OD by Demographic.csv")
ui <- fluidPage(
tabPanel("About",
titlePanel("About Drug Overdoses"),
textOutput("Drug_Overdoses")
),
tabPanel("Plots",
sidebarLayout(
sidebarPanel(
p("Here you can anaylze the type of drug causing the overdose, as well as the breakdown by raceshowing you the impact by sex")
)
)
),
tabpanel("Tables",
mainPanel("table"),
sidebarLayout(
sidebarPanel(
p("This panel gives a breakdown of overdose by demographics(race and sex), as it breaks down
overdose by drug")
)
))
)
library(shiny)
overdose_data <- read.csv("Overdose_data_1999-2021 1.19.23.xlsx - Rate OD by Demographic.csv")
ui <- fluidPage(
tabPanel("About",
titlePanel("About Drug Overdoses"),
textOutput("Drug_Overdoses")
),
tabPanel("Plots",
sidebarLayout(
sidebarPanel(
p("Here you can anaylze the type of drug causing the overdose, as well as the breakdown by raceshowing you the impact by sex")
)
),
mainPanel(
plotOutput("Overdose_histo")
)
),
tabpanel("Tables",
mainPanel("table"),
sidebarLayout(
sidebarPanel(
p("This panel gives a breakdown of overdose by demographics(race and sex), as it breaks down
overdose by drug")
)
),
mainPanel(tableOutput("Overdose_table"))
)
)
library(shiny)
overdose_data <- read.csv("Overdose_data_1999-2021 1.19.23.xlsx - Rate OD by Demographic.csv")
ui <- fluidPage(
tabPanel("About",
titlePanel("About Drug Overdoses"),
textOutput("Drug_Overdoses")
),
tabPanel("Plots",
sidebarLayout(
sidebarPanel(
p("Here you can anaylze the type of drug causing the overdose, as well as the breakdown by raceshowing you the impact by sex")
)
),
mainPanel(
plotOutput("Overdose_histo")
)
),
tabpanel("Tables",
mainPanel("table"),
sidebarLayout(
sidebarPanel(
p("This panel gives a breakdown of overdose by demographics(race and sex), as it breaks down
overdose by drug")
)
),
mainPanel(
tableOutput("Overdose_table")
)
)
)
library(shiny)
overdose_data <- read.csv("Overdose_data_1999-2021 1.19.23.xlsx - Rate OD by Demographic.csv")
ui <- fluidPage(
tabPanel("About",
titlePanel("About Drug Overdoses"),
textOutput("Drug_Overdoses")
),
tabPanel("Plots",
sidebarLayout(
sidebarPanel(
p("Here you can anaylze the type of drug causing the overdose, as well as the breakdown by raceshowing you the impact by sex"),
mainPanel(
plotOutput("Overdose_histo")
))
)),
tabpanel("Tables",
mainPanel("table"),
sidebarLayout(
sidebarPanel(
p("This panel gives a breakdown of overdose by demographics(race and sex), as it breaks down
overdose by drug"),
mainPanel(
tableOutput("Overdose_table")
))
))
)
ui <- fluidPage(
tabPanel("About",
titlePanel("About Drug Overdoses"),
textOutput("Drug_Overdoses")
),
tabPanel("Plots",
sidebarLayout(
sidebarPanel(
p("Here you can anaylze the type of drug causing the overdose, as well as the breakdown by race showing you the impact by sex"),
mainPanel(plotOutput("Overdose_histo")
))
)),
tabpanel("Tables",
mainPanel("table"),
sidebarLayout(
sidebarPanel(
p("This panel gives a breakdown of overdose by demographics(race and sex), as it breaks down
overdose by drug"), mainPanel(tableOutput("Overdose_table")
))
))
)
ui <- fluidPage(
tabPanel("About",
titlePanel("About Drug Overdoses"),
textOutput("Drug_Overdoses")
),
tabPanel("Plots",
sidebarLayout(
sidebarPanel(
mainPanel(plotOutput("Overdose_histo"),
p("Here you can anaylze the type of drug causing the overdose, as well as the breakdown by race showing you the impact by sex")
))
)),
tabpanel("Tables",
mainPanel("table"),
sidebarLayout(
sidebarPanel(
p("This panel gives a breakdown of overdose by demographics(race and sex), as it breaks down
overdose by drug"), mainPanel(tableOutput("Overdose_table")
))
))
)
mainPanel(plotOutput("Overdose_histo")
library(shiny)
library(shiny)
library(shiny)
library(shiny)
overdose_data <- read.csv("Overdose_data_1999-2021 1.19.23.xlsx - Rate OD by Demographic.csv")
ui <- fluidPage(
tabPanel("About",
titlePanel("About Drug Overdoses"),
textOutput("Drug_Overdoses")
),
tabPanel("Plots",
mainPanel(plotOutput("Overdose_histo")
),
tabpanel("Tables",
mainPanel(tableOutput("Overdose_histo"))
)
server <- function(input, output) {
